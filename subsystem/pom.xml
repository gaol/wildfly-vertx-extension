<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2020 RedHat

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly.extension.vertx</groupId>
        <artifactId>vertx-extension-pom</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>vertx-subsystem</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <name>WildFly Vertx Extension - Subsystem</name>

    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-controller</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-server</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-naming</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-clustering-service</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-clustering-infinispan-spi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-clustering-infinispan-extension</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-weld-common</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.msc</groupId>
            <artifactId>jboss-msc</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging-annotations</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging-processor</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-infinispan</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-multimap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-clustered-lock</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-clustered-counter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-subsystem-test</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <inherited>false</inherited>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>build-dist</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <!-- Replace the '.' in ${module.name} with '/' to get its path  -->
                                <tempfile property="temp.file" />
                                <echo message="${module.name}" file="${temp.file}" />
                                <replace file="${temp.file}" token="." value="/" />
                                <loadfile srcfile="${temp.file}" property="module.path" />
                                <delete file="${temp.file}" />
                                <delete dir="target/module" />
                                <property name="module.dir" value="target/module/${module.path}/main" />
                                <filter token="project.artifactId" value="${project.artifactId}"/>
                                <filter token="project.version" value="${project.version}"/>
                                <filter token="version.vertx" value="${version.vertx}"/>
                                <filter token="version.infinispan" value="${version.infinispan}"/>
                                <copy file="src/main/resources/module/main/module.xml" tofile="${module.dir}/module.xml" filtering="true" />
                                <copy file="target/${project.artifactId}-${project.version}.jar" todir="${module.dir}" />
                                <copy file="${settings.localRepository}/io/vertx/vertx-core/${version.vertx}/vertx-core-${version.vertx}.jar" todir="${module.dir}" />
                                <copy file="${settings.localRepository}/io/vertx/vertx-infinispan/${version.vertx}/vertx-infinispan-${version.vertx}.jar" todir="${module.dir}" />
                                <copy file="${settings.localRepository}/org/infinispan/infinispan-multimap/${version.infinispan}/infinispan-multimap-${version.infinispan}.jar" todir="${module.dir}" />
                                <copy file="${settings.localRepository}/org/infinispan/infinispan-clustered-lock/${version.infinispan}/infinispan-clustered-lock-${version.infinispan}.jar" todir="${module.dir}" />
                                <copy file="${settings.localRepository}/org/infinispan/infinispan-clustered-counter/${version.infinispan}/infinispan-clustered-counter-${version.infinispan}.jar" todir="${module.dir}" />
                                <echo>Module ${module.name} has been created in the target/module directory. Copy to your WildFly installation.</echo>
                                <zip basedir="target/module/" destfile="target/${project.artifactId}-module.zip" />
                                <echo>Please unzip target/${project.artifactId}-module.zip to your WildFly installation.</echo>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
