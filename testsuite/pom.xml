<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly.extension.vertx</groupId>
        <artifactId>wildfly-vertx-extension-pom</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-vertx-extension-testsuite</artifactId>
    <packaging>pom</packaging>

    <name>WildFly Vertx Extension - TestSuite :: Aggregator</name>

    <modules>
        <module>shared</module>
        <module>integration</module>
    </modules>

    <properties>
        <!-- Current module's directory. Will automatically pick up sub-module's basedir. -->
        <jbossas.ts.submodule.dir>${basedir}</jbossas.ts.submodule.dir>
        <!-- Integration module's directory. To be overriden in sub-modules. -->
        <jbossas.ts.integ.dir>${basedir}/integration</jbossas.ts.integ.dir>
        <!-- This project's testsuite dir. To be changed for every submodule (until we figure out how to do it automatically). -->
        <jbossas.ts.dir>${basedir}</jbossas.ts.dir>
        <!-- This project's root dir. -->
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>

        <!-- Skips profile generation; to be used with running single test with -Dtest=... -->
        <skip.antrun>false</skip.antrun>

        <!-- Used to provide an absolute location for the distribution under test. -->
        <!-- This value is overridden in modules with the correct relative pathname. -->
        <jboss.dist>${project.basedir}/../${thin.server.path}</jboss.dist>
        <jboss.home>${jboss.dist}</jboss.home>

        <jvm.args.dirs>
            -Djbossas.ts.submodule.dir=${jbossas.ts.submodule.dir}
            -Djbossas.ts.integ.dir=${jbossas.ts.integ.dir}
            -Djbossas.ts.dir=${jbossas.ts.dir}
            -Djbossas.project.dir=${jbossas.project.dir}
            -Djboss.dist=${jboss.dist}
            -Djava.io.tmpdir=${basedir}/target
        </jvm.args.dirs>
        <jvm.args.ip>-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false</jvm.args.ip>
        <jvm.args.ip.server>${jvm.args.ip}</jvm.args.ip.server>
        <server.jvm.args>${surefire.system.args} ${jvm.args.ip.server} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args}</server.jvm.args>
        <jboss.args>-Dts.wildfly.version=${project.version}</jboss.args>

        <!-- Additional JVM args, like those for EC2. -->
        <jvm.args.other>-server</jvm.args.other>

        <!-- Logging config -->
        <testLogToFile>true</testLogToFile>

        <!-- Timeout ratios. 100 will leave the timeout as it was coded. -->
        <timeout.factor>100</timeout.factor>
        <jvm.args.timeouts>-Dts.timeout.factor=${timeout.factor}</jvm.args.timeouts>

        <!-- Common surefire properties. -->
        <surefire.memory.args>-Xmx512m -XX:MetaspaceSize=128m</surefire.memory.args>
        <surefire.jpda.args />
        <as.debug.port>8787</as.debug.port>
        <surefire.system.args> ${surefire.memory.args} ${surefire.jpda.args} -Djboss.dist=${jboss.dist}  -Dmaven.repo.local=${settings.localRepository}</surefire.system.args>
        <extra.server.jvm.args />
        <!-- Hook to control forked process timeout via -D. Default value of 0 means no timeout -->
        <surefire.forked.process.timeout>0</surefire.forked.process.timeout>

        <!-- If servers should be killed before the test suite is run-->
        <org.wildfly.test.kill-servers-before-test>false</org.wildfly.test.kill-servers-before-test>

        <!-- Arquillian dependency versions -->
        <version.org.jboss.arquillian>1.7.1.Final</version.org.jboss.arquillian>
        <version.org.wildfly.arquillian>5.0.1.Final</version.org.wildfly.arquillian>

        <surefire.system.args>-ea -Duser.region=US -Duser.language=en -XX:MaxMetaspaceSize=512m </surefire.system.args>
        <server.jboss.args>--stability=preview</server.jboss.args>

        <surefire.logmanager>org.jboss.logmanager.LogManager</surefire.logmanager>

        <!-- Arquillian dependency versions -->
        <version.arquillian_wildfly>${project.parent.version}</version.arquillian_wildfly>
        <thin.server.path>build/target/wildfly-vertx-build-${project.version}</thin.server.path>

        <!-- Don't try to deploy the testsuite modules because they don't build jars -->
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly.extension.vertx</groupId>
                <artifactId>wildfly-vertx-extension-testsuite-shared</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly.arquillian</groupId>
                <artifactId>wildfly-arquillian-container-managed</artifactId>
                <version>${version.org.wildfly.arquillian}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly.arquillian</groupId>
                <artifactId>wildfly-arquillian-protocol-jmx</artifactId>
                <version>${version.org.wildfly.arquillian}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.junit</groupId>
                <artifactId>arquillian-junit-container</artifactId>
                <version>${version.org.jboss.arquillian}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-testsuite-shared</artifactId>
                <version>${version.org.wildfly}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-testsuite-shared</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-api</artifactId>
        </dependency>

    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>src/test/resources/filtered</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>

        <pluginManagement>
            <plugins>
                <plugin>
                   <groupId>org.apache.maven.plugins</groupId>
                   <artifactId>maven-surefire-plugin</artifactId>
                   <configuration>
                       <failIfNoTests>false</failIfNoTests>
                       <redirectTestOutputToFile>${testLogToFile}</redirectTestOutputToFile>
                       <systemPropertyVariables>
                           <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                           <jboss.dist>${jboss.dist}</jboss.dist>
                           <jboss.home>${basedir}/target/wildfly</jboss.home>
                           <jboss.args>${jboss.args}</jboss.args>
                           <server.jboss.args>${server.jboss.args}</server.jboss.args>
                           <module.path>${jboss.dist}/modules${path.separator}${basedir}/target/modules</module.path>
                           <org.wildfly.test.kill-servers-before-test>${org.wildfly.test.kill-servers-before-test}</org.wildfly.test.kill-servers-before-test>
                       </systemPropertyVariables>
                       <additionalClasspathElements combine.children="append">
                           <additionalClasspathElement>${basedir}/src/test/config/arq</additionalClasspathElement>
                       </additionalClasspathElements>
                       <argLine>${surefire.system.args}</argLine>
                       <trimStackTrace>false</trimStackTrace>
                   </configuration>
               </plugin>

            </plugins>
        </pluginManagement>
    </build>

</project>
