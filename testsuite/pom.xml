<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2021 RedHat

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly.extension.vertx</groupId>
        <artifactId>wildfly-vertx-extension-pom</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-vertx-extension-testsuite</artifactId>
    <packaging>pom</packaging>

    <name>WildFly Vertx Extension - TestSuite :: Aggregator</name>

    <modules>
        <module>shared</module>
        <module>integration</module>
    </modules>

    <properties>
        <!-- Current module's directory. Will automatically pick up sub-module's basedir. -->
        <jbossas.ts.submodule.dir>${basedir}</jbossas.ts.submodule.dir>
        <!-- Integration module's directory. To be overriden in sub-modules. -->
        <jbossas.ts.integ.dir>${basedir}/integration</jbossas.ts.integ.dir>
        <!-- This project's testsuite dir. To be changed for every submodule (until we figure out how to do it automatically). -->
        <jbossas.ts.dir>${basedir}</jbossas.ts.dir>
        <!-- This project's root dir. -->
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>

        <!-- Skips profile generation; to be used with running single test with -Dtest=... -->
        <skip.antrun>false</skip.antrun>

        <!-- Used to provide an absolute location for the distribution under test. -->
        <!-- This value is overridden in modules with the correct relative pathname. -->
        <jboss.dist>${project.basedir}/../${thin.server.path}</jboss.dist>
        <jboss.home>${jboss.dist}</jboss.home>

        <jvm.args.dirs>
            -Djbossas.ts.submodule.dir=${jbossas.ts.submodule.dir}
            -Djbossas.ts.integ.dir=${jbossas.ts.integ.dir}
            -Djbossas.ts.dir=${jbossas.ts.dir}
            -Djbossas.project.dir=${jbossas.project.dir}
            -Djboss.dist=${jboss.dist}
            -Djava.io.tmpdir=${basedir}/target
        </jvm.args.dirs>
        <jvm.args.ip>-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false</jvm.args.ip>
        <jvm.args.ip.client>${jvm.args.ip}</jvm.args.ip.client>
        <jvm.args.ip.server>${jvm.args.ip}</jvm.args.ip.server>
        <server.jvm.args>${surefire.system.args} ${jvm.args.ip.server} ${jvm.args.other} ${jvm.args.timeouts} -Dnode0=${node0} -Dnode1=${node1} -Dmcast=${mcast} -Dmcast.ttl=${mcast.ttl} ${jvm.args.dirs} ${extra.server.jvm.args}</server.jvm.args>
        <jboss.args>-Dts.wildfly.version=${project.version}</jboss.args>
        <!-- jboss.args is used in the arquillian.xml files, but wildfly-core DomainLifecycleUtil expects jboss.domain.server.args -->
        <jboss.domain.server.args></jboss.domain.server.args>

        <!-- Additional JVM args, like those for EC2. -->
        <jvm.args.other>-server</jvm.args.other>

        <!-- Logging config -->
        <testLogToFile>true</testLogToFile>

        <!-- Timeout ratios. 100 will leave the timeout as it was coded. -->
        <timeout.factor>100</timeout.factor>
        <jvm.args.timeouts>-Dts.timeout.factor=${timeout.factor}</jvm.args.timeouts>

        <!-- Common surefire properties. -->
        <surefire.memory.args>-Xmx512m -XX:MetaspaceSize=128m</surefire.memory.args>
        <surefire.jpda.args></surefire.jpda.args>
        <as.debug.port>8787</as.debug.port>
        <modular.jdk.testsuite.args />
        <surefire.system.args>${modular.jdk.testsuite.args} ${surefire.memory.args} ${surefire.jpda.args} -Djboss.dist=${jboss.dist}  -Dmaven.repo.local=${settings.localRepository}</surefire.system.args>
        <extra.server.jvm.args />
        <!-- Hook to control forked process timeout via -D. Default value of 0 means no timeout -->
        <surefire.forked.process.timeout>0</surefire.forked.process.timeout>

        <!-- If servers should be killed before the test suite is run-->
        <org.wildfly.test.kill-servers-before-test>false</org.wildfly.test.kill-servers-before-test>

        <!-- Arquillian dependency versions -->
        <version.arquillian_wildfly>${project.parent.version}</version.arquillian_wildfly>

        <!-- Don't try to deploy the testsuite modules because they don't build jars -->
        <maven.deploy.skip>true</maven.deploy.skip>

        <!-- If containers based tests are mandatory to run -->
        <container.tests.mandatory>false</container.tests.mandatory>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly.extension.vertx</groupId>
                <artifactId>wildfly-vertx-extension-testsuite-shared</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-testsuite-shared</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-api</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>src/test/resources/filtered</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>

        <pluginManagement>
            <plugins>
               <!-- WFLY-3361 - use external xalan for XML transformations to
               ensure consistent behaviour on all platrforms.-->
               <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                   <dependencies>
                       <dependency>
                           <groupId>xalan</groupId>
                           <artifactId>xalan</artifactId>
                           <version>2.7.1</version>
                       </dependency>
                   </dependencies>
               </plugin>

                <!--
                   Sets general surefire system properties.
                   These can be overridden by inheriting plugin configurations.
                -->

                <plugin>
                   <groupId>org.apache.maven.plugins</groupId>
                   <artifactId>maven-surefire-plugin</artifactId>
                   <configuration>
                       <failIfNoTests>false</failIfNoTests>
                       <redirectTestOutputToFile>${testLogToFile}</redirectTestOutputToFile>
                       <systemPropertyVariables>
                           <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                           <jboss.dist>${jboss.dist}</jboss.dist>
                           <jboss.home>${basedir}/target/wildfly</jboss.home>
                           <jboss.args>${jboss.args}</jboss.args>
                           <jboss.domain.server.args>${jboss.domain.server.args}</jboss.domain.server.args>
                           <module.path>${jboss.dist}/modules${path.separator}${basedir}/target/modules</module.path>
                           <org.wildfly.test.kill-servers-before-test>${org.wildfly.test.kill-servers-before-test}</org.wildfly.test.kill-servers-before-test>
                       </systemPropertyVariables>
                       <!-- Arquillian's config files. -->
                       <additionalClasspathElements combine.children="append">
                           <additionalClasspathElement>${basedir}/src/test/config/arq</additionalClasspathElement>
                       </additionalClasspathElements>
                       <argLine>${surefire.system.args}</argLine>
                       <trimStackTrace>false</trimStackTrace>
                   </configuration>
               </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <profiles>

        <!-- tools.jar dependency: needed for Byteman tests. -->
        <profile>
            <id>ts.clustering.use-toolsjar-jigsaw.profile</id>
            <activation>
                <jdk>[1.9,)</jdk>
            </activation>
            <properties>
                <!-- needed for arquillian-byteman-extension -->
                <surefire.byteman.argline>-Djdk.attach.allowAttachSelf=true</surefire.byteman.argline>
                <surefire.byteman.args>-Djboss.modules.system.packages=com.sun.tools.attach,org.jboss.byteman -Djdk.attach.allowAttachSelf=true</surefire.byteman.args>
            </properties>
            <dependencies/>
        </profile>

        <!--
          Debugging profiles.
        -->
        <profile>
            <id>jpda.profile</id>
            <activation><property><name>jpda</name></property></activation>
            <properties>
                <surefire.jpda.args>-agentlib:jdwp=transport=dt_socket,address=${as.debug.port},server=y,suspend=y</surefire.jpda.args>
            </properties>
        </profile>
        <profile>
            <id>debug.profile</id>
            <activation><property><name>debug</name></property></activation>
            <properties>
                <surefire.jpda.args>-agentlib:jdwp=transport=dt_socket,address=${as.debug.port},server=y,suspend=y</surefire.jpda.args>
            </properties>
        </profile>

        <!-- IPv6. Wildfly-2228. -->
        <profile>
            <id>ts.ipv6</id>
            <activation><property><name>ipv6</name></property></activation>
            <properties>
                <jvm.args.ip>-Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</jvm.args.ip>

                <!-- Override IPv4 defaults from the top. -->
                <node0>::1</node0>
                <node1>::1</node1>
                <!-- Allow loopback to multicast -->
                <!-- ip -6 route add table local local ff13::/16 dev lo metric 5 -->
                <mcast>ff13::1</mcast>
                <node0.escaped>[${node0}]</node0.escaped>

                <!-- Override xsite IPv4 defaults from the top.  -->
                <node2>::1</node2>
                <node3>::1</node3>
                <mcast1>ff13::2</mcast1>
                <mcast2>ff13::3</mcast2>
                <mcast3>ff13::4</mcast3>
            </properties>
        </profile>
        <!-- Ugly workaround for MANTRUN-172 :/   See AS7-3993. -->
        <profile>
            <id>ts.ipv6.dummy.node0</id>
            <activation><property><name>node0</name></property></activation>
            <properties> <node0>${node0}</node0> </properties>
        </profile>
        <profile>
            <id>ts.ipv6.dummy.node1</id>
            <activation><property><name>node1</name></property></activation>
            <properties> <node1>${node1}</node1> </properties>
        </profile>
        <profile>
            <id>ts.ipv6.dummy.mcast</id>
            <activation><property><name>mcast</name></property></activation>
            <properties><mcast>${mcast}</mcast></properties>
        </profile>
        <profile>
            <id>ts.ipv6.dummy.node2</id>
            <activation><property><name>node2</name></property></activation>
            <properties> <node2>${node2}</node2> </properties>
        </profile>
        <profile>
            <id>ts.ipv6.dummy.node3</id>
            <activation><property><name>node3</name></property></activation>
            <properties> <node3>${node3}</node3> </properties>
        </profile>
        <profile>
            <id>ts.ipv6.dummy.mcast1</id>
            <activation><property><name>mcast1</name></property></activation>
            <properties><mcast1>${mcast1}</mcast1></properties>
        </profile>
        <profile>
            <id>ts.ipv6.dummy.mcast2</id>
            <activation><property><name>mcast2</name></property></activation>
            <properties><mcast2>${mcast2}</mcast2></properties>
        </profile>
        <profile>
            <id>ts.ipv6.dummy.mcast3</id>
            <activation><property><name>mcast3</name></property></activation>
            <properties><mcast3>${mcast3}</mcast3></properties>
        </profile>

        <!-- Security manager. -->
        <profile>
            <id>ts.security.manager</id>
            <activation>
                <property>
                    <name>security.manager</name>
                </property>
            </activation>
            <properties>
                <jboss.args>-secmgr</jboss.args>
                <jboss.domain.server.args>-secmgr</jboss.domain.server.args>
                <!-- Re-enable the default surefire execution -->
                <surefire.default-test.phase>test</surefire.default-test.phase>
            </properties>
        </profile>

        <profile>
            <id>test-reporting</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions combine.self="override">

                            <!-- Run the reporting tool. -->
                            <execution>
                                <id>reporting</id>
                                <phase>site</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <target>
                                        <ant dir="${basedir}" antfile="${basedir}/tools/reporting/buildReports.xml">
                                            <!-- Defaults.
                                            <property name="reporting.dir" value="${basedir}/tools/reporting"/>
                                            <property name="reports.dest.dir" value="${basedir}/target/reports"/>
                                            <property name="reports.src.mask" value="**/target/surefire-reports/TEST-*.xml"/>
                                            -->
                                            <target name="reports"/>
                                        </ant>
                                    </target>
                                </configuration>
                            </execution>

                            <!-- Help banner. -->
                            <execution>
                                <id>banner</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <target>
                                        <loadfile property="help.banner" srcFile="${basedir}/tools/help-banner.txt"/>
                                        <echo>${help.banner}</echo>
                                    </target>
                                </configuration>
                            </execution>

                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant-junit</artifactId>
                                <version>${version.ant.junit}</version>
                            </dependency>
                        </dependencies>
                    </plugin>

                </plugins>

            </build>
        </profile>

        <profile>
            <id>help</id>
            <activation><property><name>ts.help</name></property></activation>
            <build>
                <plugins>
                    <!-- Testsuite debugging info. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-help-plugin</artifactId>
                        <inherited>true</inherited>
                        <executions>
                            <execution>
                                <id>help.active-profiles</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>active-profiles</goal>
                                </goals>
                                <configuration>
                                    <output>target/help.active-profiles.txt</output>
                                </configuration>
                            </execution>
                            <execution>
                                <id>help.effective-pom</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>effective-pom</goal>
                                </goals>
                                <configuration>
                                    <output>target/help.effective-pom.txt</output>
                                </configuration>
                            </execution>
                            <execution>
                                <id>help.effective-settings</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>effective-settings</goal>
                                </goals>
                                <configuration>
                                    <output>target/help.effective-settings.txt</output>
                                </configuration>
                            </execution>
                            <execution>
                                <id>help.system</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>system</goal>
                                </goals>
                                <configuration>
                                    <output>target/help.system.txt</output>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>write-project-properties</goal>
                                </goals>
                                <configuration>
                                    <outputFile>target/help.properties.txt</outputFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jdk9</id>
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <properties>
                <modular.jdk.testsuite.args>${modular.jdk.args}
                    --add-opens=java.base/javax.crypto=ALL-UNNAMED
                    --add-opens=java.base/sun.security.validator=ALL-UNNAMED
                    --add-exports=java.base/sun.security.validator=ALL-UNNAMED
                    --add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED
                    --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED
                </modular.jdk.testsuite.args>
            </properties>
        </profile>
        <profile>
            <id>jdk-target</id>
            <activation>
                <jdk>[9,)</jdk>
                <property>
                    <name>jdk-release</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${version.compiler.plugin}</version>
                        <configuration>
                            <release>${jdk-release}</release>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
