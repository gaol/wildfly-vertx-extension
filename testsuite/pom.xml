<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2021 RedHat

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly.extension.vertx</groupId>
        <artifactId>wildfly-vertx-extension-pom</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-vertx-extension-testsuite</artifactId>
    <packaging>pom</packaging>

    <name>WildFly Vertx Extension - TestSuite :: Aggregator</name>

    <modules>
        <module>shared</module>
        <module>integration</module>
    </modules>

    <properties>
        <!-- Current module's directory. Will automatically pick up sub-module's basedir. -->
        <jbossas.ts.submodule.dir>${basedir}</jbossas.ts.submodule.dir>
        <!-- Integration module's directory. To be overriden in sub-modules. -->
        <jbossas.ts.integ.dir>${basedir}/integration</jbossas.ts.integ.dir>
        <!-- This project's testsuite dir. To be changed for every submodule (until we figure out how to do it automatically). -->
        <jbossas.ts.dir>${basedir}</jbossas.ts.dir>
        <!-- This project's root dir. -->
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>

        <!-- Skips profile generation; to be used with running single test with -Dtest=... -->
        <skip.antrun>false</skip.antrun>

        <!-- Used to provide an absolute location for the distribution under test. -->
        <!-- This value is overridden in modules with the correct relative pathname. -->
        <jboss.dist>${project.basedir}/../${thin.server.path}</jboss.dist>
        <jboss.home>${jboss.dist}</jboss.home>

        <jvm.args.dirs>
            -Djbossas.ts.submodule.dir=${jbossas.ts.submodule.dir}
            -Djbossas.ts.integ.dir=${jbossas.ts.integ.dir}
            -Djbossas.ts.dir=${jbossas.ts.dir}
            -Djbossas.project.dir=${jbossas.project.dir}
            -Djboss.dist=${jboss.dist}
            -Djava.io.tmpdir=${basedir}/target
        </jvm.args.dirs>
        <jvm.args.ip>-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false</jvm.args.ip>
        <jvm.args.ip.client>${jvm.args.ip}</jvm.args.ip.client>
        <jvm.args.ip.server>${jvm.args.ip}</jvm.args.ip.server>
        <server.jvm.args>${surefire.system.args} ${jvm.args.ip.server} ${jvm.args.other} ${jvm.args.timeouts} -Dnode0=${node0} -Dnode1=${node1} -Dmcast=${mcast} -Dmcast.ttl=${mcast.ttl} ${jvm.args.dirs} ${extra.server.jvm.args}</server.jvm.args>
        <jboss.args>-Dts.wildfly.version=${project.version}</jboss.args>
        <!-- jboss.args is used in the arquillian.xml files, but wildfly-core DomainLifecycleUtil expects jboss.domain.server.args -->
        <jboss.domain.server.args></jboss.domain.server.args>

        <!-- Additional JVM args, like those for EC2. -->
        <jvm.args.other>-server</jvm.args.other>

        <!-- Logging config -->
        <testLogToFile>true</testLogToFile>

        <!-- Timeout ratios. 100 will leave the timeout as it was coded. -->
        <timeout.factor>100</timeout.factor>
        <jvm.args.timeouts>-Dts.timeout.factor=${timeout.factor}</jvm.args.timeouts>

        <!-- Common surefire properties. -->
        <surefire.memory.args>-Xmx512m -XX:MetaspaceSize=128m</surefire.memory.args>
        <surefire.jpda.args></surefire.jpda.args>
        <as.debug.port>8787</as.debug.port>
        <modular.jdk.testsuite.args />
        <surefire.system.args>${modular.jdk.testsuite.args} ${surefire.memory.args} ${surefire.jpda.args} -Djboss.dist=${jboss.dist}  -Dmaven.repo.local=${settings.localRepository}</surefire.system.args>
        <extra.server.jvm.args />
        <!-- Hook to control forked process timeout via -D. Default value of 0 means no timeout -->
        <surefire.forked.process.timeout>0</surefire.forked.process.timeout>

        <!-- If servers should be killed before the test suite is run-->
        <org.wildfly.test.kill-servers-before-test>false</org.wildfly.test.kill-servers-before-test>

        <!-- Arquillian dependency versions -->
        <version.arquillian_wildfly>${project.parent.version}</version.arquillian_wildfly>

        <!-- Don't try to deploy the testsuite modules because they don't build jars -->
        <maven.deploy.skip>true</maven.deploy.skip>

        <!-- If containers based tests are mandatory to run -->
        <container.tests.mandatory>false</container.tests.mandatory>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly.extension.vertx</groupId>
                <artifactId>wildfly-vertx-extension-testsuite-shared</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-testsuite-shared</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-api</artifactId>
        </dependency>

    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>src/test/resources/filtered</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>

        <pluginManagement>
            <plugins>
                <!--
                   Sets general surefire system properties.
                   These can be overridden by inheriting plugin configurations.
                -->

                <plugin>
                   <groupId>org.apache.maven.plugins</groupId>
                   <artifactId>maven-surefire-plugin</artifactId>
                   <configuration>
                       <failIfNoTests>false</failIfNoTests>
                       <redirectTestOutputToFile>${testLogToFile}</redirectTestOutputToFile>
                       <systemPropertyVariables>
                           <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                           <jboss.dist>${jboss.dist}</jboss.dist>
                           <jboss.home>${basedir}/target/wildfly</jboss.home>
                           <jboss.args>${jboss.args}</jboss.args>
                           <jboss.domain.server.args>${jboss.domain.server.args}</jboss.domain.server.args>
                           <module.path>${jboss.dist}/modules${path.separator}${basedir}/target/modules</module.path>
                           <org.wildfly.test.kill-servers-before-test>${org.wildfly.test.kill-servers-before-test}</org.wildfly.test.kill-servers-before-test>
                       </systemPropertyVariables>
                       <!-- Arquillian's config files. -->
                       <additionalClasspathElements combine.children="append">
                           <additionalClasspathElement>${basedir}/src/test/config/arq</additionalClasspathElement>
                       </additionalClasspathElements>
                       <argLine>${surefire.system.args}</argLine>
                       <trimStackTrace>false</trimStackTrace>
                   </configuration>
               </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <profiles>

        <!--
          Debugging profiles.
        -->
        <profile>
            <id>debug.profile</id>
            <activation><property><name>debug</name></property></activation>
            <properties>
                <surefire.jpda.args>-agentlib:jdwp=transport=dt_socket,address=${as.debug.port},server=y,suspend=y</surefire.jpda.args>
            </properties>
        </profile>

        <!-- IPv6. Wildfly-2228. -->
        <profile>
            <id>ts.ipv6</id>
            <activation><property><name>ipv6</name></property></activation>
            <properties>
                <jvm.args.ip>-Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</jvm.args.ip>

                <!-- Override IPv4 defaults from the top. -->
                <node0>::1</node0>
                <node1>::1</node1>
                <!-- Allow loopback to multicast -->
                <!-- ip -6 route add table local local ff13::/16 dev lo metric 5 -->
                <mcast>ff13::1</mcast>
                <node0.escaped>[${node0}]</node0.escaped>

                <!-- Override xsite IPv4 defaults from the top.  -->
                <node2>::1</node2>
                <node3>::1</node3>
                <mcast1>ff13::2</mcast1>
                <mcast2>ff13::3</mcast2>
                <mcast3>ff13::4</mcast3>
            </properties>
        </profile>
        <profile>
            <id>jdk9</id>
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <properties>
                <modular.jdk.testsuite.args>${modular.jdk.args}
                    --add-opens=java.base/javax.crypto=ALL-UNNAMED
                    --add-opens=java.base/sun.security.validator=ALL-UNNAMED
                    --add-exports=java.base/sun.security.validator=ALL-UNNAMED
                    --add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED
                    --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED
                </modular.jdk.testsuite.args>
            </properties>
        </profile>
        <profile>
            <id>jdk-target</id>
            <activation>
                <jdk>[9,)</jdk>
                <property>
                    <name>jdk-release</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${version.compiler.plugin}</version>
                        <configuration>
                            <release>${jdk-release}</release>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
